{
    "openapi": "3.0.0",
    "info": {
        "title": "Food Explorer API",
        "version": "1.0.0",
        "description": "API for managing dishes, users, orders, and sessions in the Food Explorer app.",
        "contact": {
            "name": "Ariel",
            "url": "https://github.com/arielcBR/food-explorer-backend",
            "email": "ariel.campos94@yahoo.com"
        }
    },
    "servers": [
        {
            "url": "http://localhost:4000"
        }
    ],
    "tags": [
        {
            "name": "Users",
            "description": "Endpoints related to users management"
        },
        {
            "name": "Dishes",
            "description": "Endpoints related to dishes management"
        },
        {
            "name": "Sessions",
            "description": "Endpoints related to Sessions management"
        },
        {
            "name": "Orders",
            "description": "Endpoints related to orders management"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "summary": "Create a user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "isAdmin": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "isAdmin"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error detail"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/sessions": {
            "post": {
                "summary": "Create a user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "isAdmin": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "isAdmin"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error detail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/favorites": {
            "post": {
                "summary": "Set/Unset a favorite dish",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "number"
                                    },
                                    "dishId": {
                                        "type": "number"
                                    },
                                    "favorite": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "userId",
                                    "dishId",
                                    "favorite"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dish unfavorited successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The dish has been unfavorited!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error detail"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/favorites/{userId}": {
            "get": {
                "summary": "Favorited dishes by user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorited dishes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "0": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "category": {
                                                    "type": "string"
                                                },
                                                "price": {
                                                    "type": "number"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "picture": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The user have not added favorite dishes"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/dishes": {
            "post": {
                "summary": "Create a dish",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "category": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "ingredients": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "picture": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "name",
                                    "category",
                                    "price",
                                    "description",
                                    "ingredients",
                                    "picture"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Dish created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "dishCreated": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad request, nothing was sent!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user does not have permission"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Dishes"
                ]
            },
            "get": {
                "summary": "Show all dishes",
                "responses": {
                    "200": {
                        "description": "List of all dishes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "dishes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "category": {
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "picture": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Dishes"
                ]
            }
        },
        "/dishes/search/": {
            "get": {
                "summary": "Search by dish or ingredient",
                "parameters": [
                    {
                        "name": "dish",
                        "in": "query",
                        "description": "Name of the dish or ingredient to search for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dish found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "dishes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "tiramisu"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "postre"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "example": 19.99
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "el tradicional postre italiano, untuoso, cremoso y rico"
                                                    },
                                                    "picture": {
                                                        "type": "string",
                                                        "example": "Standard image"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-01-27 00:05:23"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-01-27 00:05:23"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dish not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dish not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Dishes"
                ]
            }
        },
        "/dishes/{dishId}": {
            "delete": {
                "summary": "Delete a dish",
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "ID of the dish to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dish successfully deleted!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dish successfully deleted!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dish not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Dishes"
                ]
            },
            "get": {
                "summary": "Show dish by id",
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "ID of the dish to show",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dish found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "dish": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "tiramisu"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "postre"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 19.99
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "el tradicional postre, cremoso y rico"
                                                },
                                                "picture": {
                                                    "type": "string",
                                                    "example": "/media/ariel/backup/Cursos/Rocketseat/Explorer/Desafio final/Backend/Images/temp/9e7a156ccc29176fc472-empanada de carne.jpg"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-01-27 00:05:23"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-01-27 00:05:23"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dish not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dish not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Dishes"
                ]
            },
            "patch": {
                "summary": "Update dish by id",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "category": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "ingredients": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "picture": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "name",
                                    "category",
                                    "price",
                                    "description",
                                    "ingredients",
                                    "picture"
                                ]
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "ID of the dish to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dish updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dish updated!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user does not have permission"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Dish not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dish not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Dishes"
                ]
            }
        },
        "/sessions/": {
            "post": {
                "summary": "Sign in",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User signed in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "ariel"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "ariel@live.com"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "$2b$08$9uiJ9PcodLOHGnTTinRXteiSHJZJBG9S/zKU7diu2pyYjN4z9uXOq"
                                                },
                                                "userActivated": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "isAdmin": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-01-27 19:21:39"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-01-27 19:21:39"
                                                }
                                            }
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE3MDY0Njk2NTgsImV4cCI6MTcwNjQ3Njg1OCwic3ViIjoiMiJ9.Etn2WaIODMXyd-5SMZsHUWt0jH8dutKOjLUBmXxDlkc"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The email and/or password incorrect!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The email and/or password were not sent"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Sessions"
                ]
            }
        },
        "/orders/": {
            "post": {
                "summary": "Create an order",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "integer"
                                    },
                                    "dishes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "quantity": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "quantity"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "userId",
                                    "dishes"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "order_id": {
                                            "type": "integer",
                                            "example": 4
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not sent!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Orders"
                ]
            },
            "get": {
                "summary": "Show order details",
                "description": "Show order details by ID",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "query",
                        "description": "ID of the order to show",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "category": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "number"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "picture": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "quantity": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "id": 4,
                                        "name": "bife de chorizo",
                                        "category": "carnes",
                                        "price": 19.99,
                                        "description": "bife de chorizo jugoso y bien condimentado",
                                        "picture": "Standard image",
                                        "created_at": "2024-01-27T19:21:40",
                                        "updated_at": "2024-01-28T19:14:57",
                                        "quantity": 8
                                    },
                                    {
                                        "id": 5,
                                        "name": "tiramisu",
                                        "category": "postre",
                                        "price": 19.99,
                                        "description": "el tradicional postre italiano, untuoso, cremoso y rico",
                                        "picture": "Standard image",
                                        "created_at": "2024-01-27T19:21:40",
                                        "updated_at": "2024-01-27T19:21:40",
                                        "quantity": 6
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order does not found!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Orders"
                ]
            },
            "patch": {
                "summary": "Update order status",
                "description": "Update the status of an order by ID",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "orderId": {
                                        "type": "integer"
                                    },
                                    "orderStatus": {
                                        "type": "string",
                                        "enum": [
                                            "canceled",
                                            "pending",
                                            "preparing",
                                            "delivering",
                                            "finished"
                                        ]
                                    }
                                },
                                "required": [
                                    "orderId",
                                    "orderStatus"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order status updated successfully!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order status sent is invalid!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Orders"
                ]
            }
        },
        "/orders/{orderId}": {
            "get": {
                "summary": "Show order",
                "description": "Show order details by ID",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order to show",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "example": [
                                    1,
                                    2,
                                    3
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not find!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalided JWT Token"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Orders"
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}